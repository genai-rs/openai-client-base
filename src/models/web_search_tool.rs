/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WebSearchTool : Search the Internet for sources related to the prompt. Learn more about the [web search tool](https://platform.openai.com/docs/guides/tools-web-search).
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct WebSearchTool {
    /// The type of the web search tool. One of `web_search` or `web_search_2025_08_26`.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(
        rename = "filters",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub filters: Option<Option<Box<models::WebSearchToolFilters>>>,
    #[serde(
        rename = "user_location",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub user_location: Option<Option<Box<models::WebSearchApproximateLocation>>>,
    /// High level guidance for the amount of context window space to use for the search. One of `low`, `medium`, or `high`. `medium` is the default.
    #[serde(
        rename = "search_context_size",
        skip_serializing_if = "Option::is_none"
    )]
    pub search_context_size: Option<SearchContextSize>,
}

impl WebSearchTool {
    /// Search the Internet for sources related to the prompt. Learn more about the [web search tool](https://platform.openai.com/docs/guides/tools-web-search).
    pub fn new(r#type: Type) -> WebSearchTool {
        WebSearchTool {
            r#type,
            filters: None,
            user_location: None,
            search_context_size: None,
        }
    }
}
/// The type of the web search tool. One of `web_search` or `web_search_2025_08_26`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "web_search")]
    WebSearch,
    #[serde(rename = "web_search_2025_08_26")]
    WebSearch20250826,
}

impl Default for Type {
    fn default() -> Type {
        Self::WebSearch
    }
}
/// High level guidance for the amount of context window space to use for the search. One of `low`, `medium`, or `high`. `medium` is the default.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SearchContextSize {
    #[serde(rename = "low")]
    Low,
    #[serde(rename = "medium")]
    Medium,
    #[serde(rename = "high")]
    High,
}

impl Default for SearchContextSize {
    fn default() -> SearchContextSize {
        Self::Low
    }
}
