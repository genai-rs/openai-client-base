/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct RunGraderResponse {
    #[serde(rename = "reward")]
    pub reward: f64,
    #[serde(rename = "metadata")]
    pub metadata: Box<models::RunGraderResponseMetadata>,
    #[serde(rename = "sub_rewards")]
    pub sub_rewards: std::collections::HashMap<String, serde_json::Value>,
    #[serde(rename = "model_grader_token_usage_per_model")]
    pub model_grader_token_usage_per_model: std::collections::HashMap<String, serde_json::Value>,
}

impl RunGraderResponse {
    pub fn new(
        reward: f64,
        metadata: models::RunGraderResponseMetadata,
        sub_rewards: std::collections::HashMap<String, serde_json::Value>,
        model_grader_token_usage_per_model: std::collections::HashMap<String, serde_json::Value>,
    ) -> RunGraderResponse {
        RunGraderResponse {
            reward,
            metadata: Box::new(metadata),
            sub_rewards,
            model_grader_token_usage_per_model,
        }
    }
}
