/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AdminApiKey : Represents an individual Admin API key in an org.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct AdminApiKey {
    /// The object type, which is always `organization.admin_api_key`
    #[serde(rename = "object")]
    pub object: String,
    /// The identifier, which can be referenced in API endpoints
    #[serde(rename = "id")]
    pub id: String,
    /// The name of the API key
    #[serde(rename = "name")]
    pub name: String,
    /// The redacted value of the API key
    #[serde(rename = "redacted_value")]
    pub redacted_value: String,
    /// The value of the API key. Only shown on create.
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
    /// The Unix timestamp (in seconds) of when the API key was created
    #[serde(rename = "created_at")]
    pub created_at: i64,
    /// The Unix timestamp (in seconds) of when the API key was last used
    #[serde(rename = "last_used_at", deserialize_with = "Option::deserialize")]
    pub last_used_at: Option<i64>,
    #[serde(rename = "owner")]
    pub owner: Box<models::AdminApiKeyOwner>,
}

impl AdminApiKey {
    /// Represents an individual Admin API key in an org.
    pub fn new(
        object: String,
        id: String,
        name: String,
        redacted_value: String,
        created_at: i64,
        last_used_at: Option<i64>,
        owner: models::AdminApiKeyOwner,
    ) -> AdminApiKey {
        AdminApiKey {
            object,
            id,
            name,
            redacted_value,
            value: None,
            created_at,
            last_used_at,
            owner: Box::new(owner),
        }
    }
}
