/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RealtimeServerEventRateLimitsUpdated : Emitted at the beginning of a Response to indicate the updated rate limits.  When a Response is created some tokens will be \"reserved\" for the output  tokens, the rate limits shown here reflect that reservation, which is then  adjusted accordingly once the Response is completed. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct RealtimeServerEventRateLimitsUpdated {
    /// The unique ID of the server event.
    #[serde(rename = "event_id")]
    pub event_id: String,
    #[serde(rename = "type", deserialize_with = "Option::deserialize")]
    pub r#type: Option<serde_json::Value>,
    /// List of rate limit information.
    #[serde(rename = "rate_limits")]
    pub rate_limits: Vec<models::RealtimeBetaServerEventRateLimitsUpdatedRateLimitsInner>,
}

impl RealtimeServerEventRateLimitsUpdated {
    /// Emitted at the beginning of a Response to indicate the updated rate limits.  When a Response is created some tokens will be \"reserved\" for the output  tokens, the rate limits shown here reflect that reservation, which is then  adjusted accordingly once the Response is completed. 
    pub fn new(event_id: String, r#type: Option<serde_json::Value>, rate_limits: Vec<models::RealtimeBetaServerEventRateLimitsUpdatedRateLimitsInner>) -> RealtimeServerEventRateLimitsUpdated {
        RealtimeServerEventRateLimitsUpdated {
            event_id,
            r#type,
            rate_limits,
        }
    }
}

