/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CustomToolCallOutput : The output of a custom tool call from your code, being sent back to the model.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct CustomToolCallOutput {
    /// The type of the custom tool call output. Always `custom_tool_call_output`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The unique ID of the custom tool call output in the OpenAI platform.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The call ID, used to map this custom tool call output to a custom tool call.
    #[serde(rename = "call_id")]
    pub call_id: String,
    /// The output from the custom tool call generated by your code.
    #[serde(rename = "output")]
    pub output: String,
}

impl CustomToolCallOutput {
    /// The output of a custom tool call from your code, being sent back to the model.
    pub fn new(r#type: Type, call_id: String, output: String) -> CustomToolCallOutput {
        CustomToolCallOutput {
            r#type,
            id: None,
            call_id,
            output,
        }
    }
}
/// The type of the custom tool call output. Always `custom_tool_call_output`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "custom_tool_call_output")]
    CustomToolCallOutput,
}

impl Default for Type {
    fn default() -> Type {
        Self::CustomToolCallOutput
    }
}
