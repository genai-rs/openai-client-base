/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct InviteRequestProjectsInner {
    /// Project's public ID
    #[serde(rename = "id")]
    pub id: String,
    /// Project membership role
    #[serde(rename = "role")]
    pub role: Role,
}

impl InviteRequestProjectsInner {
    pub fn new(id: String, role: Role) -> InviteRequestProjectsInner {
        InviteRequestProjectsInner { id, role }
    }
}
/// Project membership role
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Role {
    #[serde(rename = "member")]
    Member,
    #[serde(rename = "owner")]
    Owner,
}

impl Default for Role {
    fn default() -> Role {
        Self::Member
    }
}
