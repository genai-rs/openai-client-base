/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ContainerListResource {
    #[serde(rename = "object", deserialize_with = "Option::deserialize")]
    pub object: Option<serde_json::Value>,
    /// A list of containers.
    #[serde(rename = "data")]
    pub data: Vec<models::ContainerResource>,
    /// The ID of the first container in the list.
    #[serde(rename = "first_id")]
    pub first_id: String,
    /// The ID of the last container in the list.
    #[serde(rename = "last_id")]
    pub last_id: String,
    /// Whether there are more containers available.
    #[serde(rename = "has_more")]
    pub has_more: bool,
}

impl ContainerListResource {
    pub fn new(object: Option<serde_json::Value>, data: Vec<models::ContainerResource>, first_id: String, last_id: String, has_more: bool) -> ContainerListResource {
        ContainerListResource {
            object,
            data,
            first_id,
            last_id,
            has_more,
        }
    }
}

