/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WebhookRealtimeCallIncomingDataSipHeadersInner : A header from the SIP Invite. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct WebhookRealtimeCallIncomingDataSipHeadersInner {
    /// Name of the SIP Header. 
    #[serde(rename = "name")]
    pub name: String,
    /// Value of the SIP Header. 
    #[serde(rename = "value")]
    pub value: String,
}

impl WebhookRealtimeCallIncomingDataSipHeadersInner {
    /// A header from the SIP Invite. 
    pub fn new(name: String, value: String) -> WebhookRealtimeCallIncomingDataSipHeadersInner {
        WebhookRealtimeCallIncomingDataSipHeadersInner {
            name,
            value,
        }
    }
}



impl std::fmt::Display for WebhookRealtimeCallIncomingDataSipHeadersInner {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match serde_json::to_string(self) {
            Ok(s) => write!(f, "{}", s),
            Err(_) => Err(std::fmt::Error),
        }
    }
}
