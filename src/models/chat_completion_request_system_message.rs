/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ChatCompletionRequestSystemMessage : Developer-provided instructions that the model should follow, regardless of messages sent by the user. With o1 models and newer, use `developer` messages for this purpose instead. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ChatCompletionRequestSystemMessage {
    #[serde(rename = "content")]
    pub content: Box<models::ChatCompletionRequestSystemMessageContent>,
    /// The role of the messages author, in this case `system`.
    #[serde(rename = "role")]
    pub role: Role,
    /// An optional name for the participant. Provides the model information to differentiate between participants of the same role.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl ChatCompletionRequestSystemMessage {
    /// Developer-provided instructions that the model should follow, regardless of messages sent by the user. With o1 models and newer, use `developer` messages for this purpose instead. 
    pub fn new(content: models::ChatCompletionRequestSystemMessageContent, role: Role) -> ChatCompletionRequestSystemMessage {
        ChatCompletionRequestSystemMessage {
            content: Box::new(content),
            role,
            name: None,
        }
    }
}
/// The role of the messages author, in this case `system`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Role {
    #[serde(rename = "system")]
    System,
}

impl Default for Role {
    fn default() -> Role {
        Self::System
    }
}

