/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CodeInterpreterFileOutput : The output of a code interpreter tool call that is a file.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct CodeInterpreterFileOutput {
    /// The type of the code interpreter file output. Always `files`.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "files")]
    pub files: Vec<models::CodeInterpreterFileOutputFilesInner>,
}

impl CodeInterpreterFileOutput {
    /// The output of a code interpreter tool call that is a file.
    pub fn new(
        r#type: Type,
        files: Vec<models::CodeInterpreterFileOutputFilesInner>,
    ) -> CodeInterpreterFileOutput {
        CodeInterpreterFileOutput { r#type, files }
    }
}
/// The type of the code interpreter file output. Always `files`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "files")]
    Files,
}

impl Default for Type {
    fn default() -> Type {
        Self::Files
    }
}
