/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TranscriptTextUsageDuration : Usage statistics for models billed by audio input duration.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct TranscriptTextUsageDuration {
    /// The type of the usage object. Always `duration` for this variant.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// Duration of the input audio in seconds.
    #[serde(rename = "seconds")]
    pub seconds: f64,
}

impl TranscriptTextUsageDuration {
    /// Usage statistics for models billed by audio input duration.
    pub fn new(r#type: Type, seconds: f64) -> TranscriptTextUsageDuration {
        TranscriptTextUsageDuration { r#type, seconds }
    }
}
/// The type of the usage object. Always `duration` for this variant.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "duration")]
    Duration,
}

impl Default for Type {
    fn default() -> Type {
        Self::Duration
    }
}
