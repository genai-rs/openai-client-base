/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ResponseOutputTextAnnotationAddedEvent : Emitted when an annotation is added to output text content. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ResponseOutputTextAnnotationAddedEvent {
    /// The type of the event. Always 'response.output_text.annotation.added'.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The unique identifier of the item to which the annotation is being added.
    #[serde(rename = "item_id")]
    pub item_id: String,
    /// The index of the output item in the response's output array.
    #[serde(rename = "output_index")]
    pub output_index: i32,
    /// The index of the content part within the output item.
    #[serde(rename = "content_index")]
    pub content_index: i32,
    /// The index of the annotation within the content part.
    #[serde(rename = "annotation_index")]
    pub annotation_index: i32,
    /// The sequence number of this event.
    #[serde(rename = "sequence_number")]
    pub sequence_number: i32,
    /// The annotation object being added. (See annotation schema for details.)
    #[serde(rename = "annotation")]
    pub annotation: serde_json::Value,
}

impl ResponseOutputTextAnnotationAddedEvent {
    /// Emitted when an annotation is added to output text content. 
    pub fn new(r#type: Type, item_id: String, output_index: i32, content_index: i32, annotation_index: i32, sequence_number: i32, annotation: serde_json::Value) -> ResponseOutputTextAnnotationAddedEvent {
        ResponseOutputTextAnnotationAddedEvent {
            r#type,
            item_id,
            output_index,
            content_index,
            annotation_index,
            sequence_number,
            annotation,
        }
    }
}
/// The type of the event. Always 'response.output_text.annotation.added'.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "response.output_text.annotation.added")]
    ResponseOutputTextAnnotationAdded,
}

impl Default for Type {
    fn default() -> Type {
        Self::ResponseOutputTextAnnotationAdded
    }
}

