/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ComputerEnvironment {
    #[serde(rename = "windows")]
    Windows,
    #[serde(rename = "mac")]
    Mac,
    #[serde(rename = "linux")]
    Linux,
    #[serde(rename = "ubuntu")]
    Ubuntu,
    #[serde(rename = "browser")]
    Browser,

}

impl std::fmt::Display for ComputerEnvironment {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Windows => write!(f, "windows"),
            Self::Mac => write!(f, "mac"),
            Self::Linux => write!(f, "linux"),
            Self::Ubuntu => write!(f, "ubuntu"),
            Self::Browser => write!(f, "browser"),
        }
    }
}

impl Default for ComputerEnvironment {
    fn default() -> ComputerEnvironment {
        Self::Windows
    }
}

