/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// VectorStoreFileObjectLastError : The last error associated with this vector store file. Will be `null` if there are no errors.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct VectorStoreFileObjectLastError {
    /// One of `server_error` or `rate_limit_exceeded`.
    #[serde(rename = "code")]
    pub code: Code,
    /// A human-readable description of the error.
    #[serde(rename = "message")]
    pub message: String,
}

impl VectorStoreFileObjectLastError {
    /// The last error associated with this vector store file. Will be `null` if there are no errors.
    pub fn new(code: Code, message: String) -> VectorStoreFileObjectLastError {
        VectorStoreFileObjectLastError {
            code,
            message,
        }
    }
}
/// One of `server_error` or `rate_limit_exceeded`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Code {
    #[serde(rename = "server_error")]
    ServerError,
    #[serde(rename = "unsupported_file")]
    UnsupportedFile,
    #[serde(rename = "invalid_file")]
    InvalidFile,
}

impl Default for Code {
    fn default() -> Code {
        Self::ServerError
    }
}

