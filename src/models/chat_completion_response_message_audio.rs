/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ChatCompletionResponseMessageAudio : If the audio output modality is requested, this object contains data about the audio response from the model. [Learn more](https://platform.openai.com/docs/guides/audio). 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ChatCompletionResponseMessageAudio {
    /// Unique identifier for this audio response.
    #[serde(rename = "id")]
    pub id: String,
    /// The Unix timestamp (in seconds) for when this audio response will no longer be accessible on the server for use in multi-turn conversations. 
    #[serde(rename = "expires_at")]
    pub expires_at: i32,
    /// Base64 encoded audio bytes generated by the model, in the format specified in the request. 
    #[serde(rename = "data")]
    pub data: String,
    /// Transcript of the audio generated by the model.
    #[serde(rename = "transcript")]
    pub transcript: String,
}

impl ChatCompletionResponseMessageAudio {
    /// If the audio output modality is requested, this object contains data about the audio response from the model. [Learn more](https://platform.openai.com/docs/guides/audio). 
    pub fn new(id: String, expires_at: i32, data: String, transcript: String) -> ChatCompletionResponseMessageAudio {
        ChatCompletionResponseMessageAudio {
            id,
            expires_at,
            data,
            transcript,
        }
    }
}

