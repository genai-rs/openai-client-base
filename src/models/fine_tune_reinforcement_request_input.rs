/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FineTuneReinforcementRequestInput : Per-line training example for reinforcement fine-tuning. Note that `messages` and `tools` are the only reserved keywords. Any other arbitrary key-value data can be included on training datapoints and will be available to reference during grading under the `{{ item.XXX }}` template variable. Input messages may contain text or image content only. Audio and file input messages are not currently supported for fine-tuning.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct FineTuneReinforcementRequestInput {
    #[serde(rename = "messages")]
    pub messages: Vec<models::FineTuneReinforcementRequestInputMessagesInner>,
    /// A list of tools the model may generate JSON inputs for.
    #[serde(rename = "tools", skip_serializing_if = "Option::is_none")]
    pub tools: Option<Vec<models::ChatCompletionTool>>,
}

impl FineTuneReinforcementRequestInput {
    /// Per-line training example for reinforcement fine-tuning. Note that `messages` and `tools` are the only reserved keywords. Any other arbitrary key-value data can be included on training datapoints and will be available to reference during grading under the `{{ item.XXX }}` template variable. Input messages may contain text or image content only. Audio and file input messages are not currently supported for fine-tuning.
    pub fn new(
        messages: Vec<models::FineTuneReinforcementRequestInputMessagesInner>,
    ) -> FineTuneReinforcementRequestInput {
        FineTuneReinforcementRequestInput {
            messages,
            tools: None,
        }
    }
}
