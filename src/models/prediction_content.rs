/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PredictionContent : Static predicted output content, such as the content of a text file that is being regenerated. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct PredictionContent {
    /// The type of the predicted content you want to provide. This type is currently always `content`. 
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "content")]
    pub content: serde_json::Value,
}

impl PredictionContent {
    /// Static predicted output content, such as the content of a text file that is being regenerated. 
    pub fn new(r#type: Type, content: serde_json::Value) -> PredictionContent {
        PredictionContent {
            r#type,
            content,
        }
    }
}
/// The type of the predicted content you want to provide. This type is currently always `content`. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "content")]
    Content,
}

impl Default for Type {
    fn default() -> Type {
        Self::Content
    }
}

