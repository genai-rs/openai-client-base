/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RunObjectRequiredActionSubmitToolOutputs : Details on the tool outputs needed for this run to continue.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct RunObjectRequiredActionSubmitToolOutputs {
    /// A list of the relevant tool calls.
    #[serde(rename = "tool_calls")]
    pub tool_calls: Vec<models::RunToolCallObject>,
}

impl RunObjectRequiredActionSubmitToolOutputs {
    /// Details on the tool outputs needed for this run to continue.
    pub fn new(tool_calls: Vec<models::RunToolCallObject>) -> RunObjectRequiredActionSubmitToolOutputs {
        RunObjectRequiredActionSubmitToolOutputs {
            tool_calls,
        }
    }
}



impl std::fmt::Display for RunObjectRequiredActionSubmitToolOutputs {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match serde_json::to_string(self) {
            Ok(s) => write!(f, "{}", s),
            Err(_) => Err(std::fmt::Error),
        }
    }
}
