/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Move : A mouse move action. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct Move {
    /// Specifies the event type. For a move action, this property is  always set to `move`. 
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The x-coordinate to move to. 
    #[serde(rename = "x")]
    pub x: i32,
    /// The y-coordinate to move to. 
    #[serde(rename = "y")]
    pub y: i32,
}

impl Move {
    /// A mouse move action. 
    pub fn new(r#type: Type, x: i32, y: i32) -> Move {
        Move {
            r#type,
            x,
            y,
        }
    }
}
/// Specifies the event type. For a move action, this property is  always set to `move`. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "move")]
    Move,
}

impl Default for Type {
    fn default() -> Type {
        Self::Move
    }
}

