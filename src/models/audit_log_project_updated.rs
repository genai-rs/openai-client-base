/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AuditLogProjectUpdated : The details for events with this `type`.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct AuditLogProjectUpdated {
    /// The project ID.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "changes_requested", skip_serializing_if = "Option::is_none")]
    pub changes_requested: Option<Box<models::AuditLogProjectUpdatedChangesRequested>>,
}

impl AuditLogProjectUpdated {
    /// The details for events with this `type`.
    pub fn new() -> AuditLogProjectUpdated {
        AuditLogProjectUpdated {
            id: None,
            changes_requested: None,
        }
    }
}

