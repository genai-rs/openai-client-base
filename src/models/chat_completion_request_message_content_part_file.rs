/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ChatCompletionRequestMessageContentPartFile : Learn about [file inputs](https://platform.openai.com/docs/guides/text) for text generation. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ChatCompletionRequestMessageContentPartFile {
    /// The type of the content part. Always `file`.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "file")]
    pub file: Box<models::ChatCompletionRequestMessageContentPartFileFile>,
}

impl ChatCompletionRequestMessageContentPartFile {
    /// Learn about [file inputs](https://platform.openai.com/docs/guides/text) for text generation. 
    pub fn new(r#type: Type, file: models::ChatCompletionRequestMessageContentPartFileFile) -> ChatCompletionRequestMessageContentPartFile {
        ChatCompletionRequestMessageContentPartFile {
            r#type,
            file: Box::new(file),
        }
    }
}
/// The type of the content part. Always `file`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "file")]
    File,
}

impl Default for Type {
    fn default() -> Type {
        Self::File
    }
}

