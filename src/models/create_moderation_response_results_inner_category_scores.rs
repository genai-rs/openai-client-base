/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreateModerationResponseResultsInnerCategoryScores : A list of the categories along with their scores as predicted by model.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct CreateModerationResponseResultsInnerCategoryScores {
    /// The score for the category 'hate'.
    #[serde(rename = "hate")]
    pub hate: f64,
    /// The score for the category 'hate/threatening'.
    #[serde(rename = "hate/threatening")]
    pub hate_slash_threatening: f64,
    /// The score for the category 'harassment'.
    #[serde(rename = "harassment")]
    pub harassment: f64,
    /// The score for the category 'harassment/threatening'.
    #[serde(rename = "harassment/threatening")]
    pub harassment_slash_threatening: f64,
    /// The score for the category 'illicit'.
    #[serde(rename = "illicit")]
    pub illicit: f64,
    /// The score for the category 'illicit/violent'.
    #[serde(rename = "illicit/violent")]
    pub illicit_slash_violent: f64,
    /// The score for the category 'self-harm'.
    #[serde(rename = "self-harm")]
    pub self_harm: f64,
    /// The score for the category 'self-harm/intent'.
    #[serde(rename = "self-harm/intent")]
    pub self_harm_slash_intent: f64,
    /// The score for the category 'self-harm/instructions'.
    #[serde(rename = "self-harm/instructions")]
    pub self_harm_slash_instructions: f64,
    /// The score for the category 'sexual'.
    #[serde(rename = "sexual")]
    pub sexual: f64,
    /// The score for the category 'sexual/minors'.
    #[serde(rename = "sexual/minors")]
    pub sexual_slash_minors: f64,
    /// The score for the category 'violence'.
    #[serde(rename = "violence")]
    pub violence: f64,
    /// The score for the category 'violence/graphic'.
    #[serde(rename = "violence/graphic")]
    pub violence_slash_graphic: f64,
}

impl CreateModerationResponseResultsInnerCategoryScores {
    /// A list of the categories along with their scores as predicted by model.
    pub fn new(
        hate: f64,
        hate_slash_threatening: f64,
        harassment: f64,
        harassment_slash_threatening: f64,
        illicit: f64,
        illicit_slash_violent: f64,
        self_harm: f64,
        self_harm_slash_intent: f64,
        self_harm_slash_instructions: f64,
        sexual: f64,
        sexual_slash_minors: f64,
        violence: f64,
        violence_slash_graphic: f64,
    ) -> CreateModerationResponseResultsInnerCategoryScores {
        CreateModerationResponseResultsInnerCategoryScores {
            hate,
            hate_slash_threatening,
            harassment,
            harassment_slash_threatening,
            illicit,
            illicit_slash_violent,
            self_harm,
            self_harm_slash_intent,
            self_harm_slash_instructions,
            sexual,
            sexual_slash_minors,
            violence,
            violence_slash_graphic,
        }
    }
}

impl std::fmt::Display for CreateModerationResponseResultsInnerCategoryScores {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match serde_json::to_string(self) {
            Ok(s) => write!(f, "{}", s),
            Err(_) => Err(std::fmt::Error),
        }
    }
}
