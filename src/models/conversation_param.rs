/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ConversationParam : The conversation that this response belongs to.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ConversationParam {
    /// The unique ID of the conversation.
    #[serde(rename = "id")]
    pub id: String,
}

impl ConversationParam {
    /// The conversation that this response belongs to.
    pub fn new(id: String) -> ConversationParam {
        ConversationParam {
            id,
        }
    }
}



impl std::fmt::Display for ConversationParam {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match serde_json::to_string(self) {
            Ok(s) => write!(f, "{}", s),
            Err(_) => Err(std::fmt::Error),
        }
    }
}
