/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct CreateContainerBody {
    /// Name of the container to create.
    #[serde(rename = "name")]
    pub name: String,
    /// IDs of files to copy to the container.
    #[serde(rename = "file_ids", skip_serializing_if = "Option::is_none")]
    pub file_ids: Option<Vec<String>>,
    #[serde(rename = "expires_after", skip_serializing_if = "Option::is_none")]
    pub expires_after: Option<Box<models::CreateContainerBodyExpiresAfter>>,
}

impl CreateContainerBody {
    pub fn new(name: String) -> CreateContainerBody {
        CreateContainerBody {
            name,
            file_ids: None,
            expires_after: None,
        }
    }
}
