/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct TranscriptionWord {
    /// The text content of the word.
    #[serde(rename = "word")]
    pub word: String,
    /// Start time of the word in seconds.
    #[serde(rename = "start")]
    pub start: f32,
    /// End time of the word in seconds.
    #[serde(rename = "end")]
    pub end: f32,
}

impl TranscriptionWord {
    pub fn new(word: String, start: f32, end: f32) -> TranscriptionWord {
        TranscriptionWord {
            word,
            start,
            end,
        }
    }
}



impl std::fmt::Display for TranscriptionWord {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match serde_json::to_string(self) {
            Ok(s) => write!(f, "{}", s),
            Err(_) => Err(std::fmt::Error),
        }
    }
}
