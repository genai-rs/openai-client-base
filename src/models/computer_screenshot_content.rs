/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ComputerScreenshotContent : A screenshot of a computer.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ComputerScreenshotContent {
    /// Specifies the event type. For a computer screenshot, this property is always set to `computer_screenshot`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The URL of the screenshot image.
    #[serde(rename = "image_url", deserialize_with = "Option::deserialize")]
    pub image_url: Option<String>,
    /// The identifier of an uploaded file that contains the screenshot.
    #[serde(rename = "file_id", deserialize_with = "Option::deserialize")]
    pub file_id: Option<String>,
}

impl ComputerScreenshotContent {
    /// A screenshot of a computer.
    pub fn new(r#type: Type, image_url: Option<String>, file_id: Option<String>) -> ComputerScreenshotContent {
        ComputerScreenshotContent {
            r#type,
            image_url,
            file_id,
        }
    }
}
/// Specifies the event type. For a computer screenshot, this property is always set to `computer_screenshot`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "computer_screenshot")]
    ComputerScreenshot,
}

impl Default for Type {
    fn default() -> Type {
        Self::ComputerScreenshot
    }
}



impl std::fmt::Display for ComputerScreenshotContent {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match serde_json::to_string(self) {
            Ok(s) => write!(f, "{}", s),
            Err(_) => Err(std::fmt::Error),
        }
    }
}
