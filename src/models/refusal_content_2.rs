/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct RefusalContent2 {
    /// The type of the refusal. Always `refusal`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The refusal explanation from the model.
    #[serde(rename = "refusal")]
    pub refusal: String,
}

impl RefusalContent2 {
    pub fn new(r#type: Type, refusal: String) -> RefusalContent2 {
        RefusalContent2 { r#type, refusal }
    }
}
/// The type of the refusal. Always `refusal`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "refusal")]
    Refusal,
}

impl Default for Type {
    fn default() -> Type {
        Self::Refusal
    }
}
