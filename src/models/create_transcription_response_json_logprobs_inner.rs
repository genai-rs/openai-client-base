/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct CreateTranscriptionResponseJsonLogprobsInner {
    /// The token in the transcription.
    #[serde(rename = "token", skip_serializing_if = "Option::is_none")]
    pub token: Option<String>,
    /// The log probability of the token.
    #[serde(rename = "logprob", skip_serializing_if = "Option::is_none")]
    pub logprob: Option<f64>,
    /// The bytes of the token.
    #[serde(rename = "bytes", skip_serializing_if = "Option::is_none")]
    pub bytes: Option<Vec<f64>>,
}

impl CreateTranscriptionResponseJsonLogprobsInner {
    pub fn new() -> CreateTranscriptionResponseJsonLogprobsInner {
        CreateTranscriptionResponseJsonLogprobsInner {
            token: None,
            logprob: None,
            bytes: None,
        }
    }
}

