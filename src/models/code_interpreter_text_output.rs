/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CodeInterpreterTextOutput : The output of a code interpreter tool call that is text. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct CodeInterpreterTextOutput {
    /// The type of the code interpreter text output. Always `logs`. 
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The logs of the code interpreter tool call. 
    #[serde(rename = "logs")]
    pub logs: String,
}

impl CodeInterpreterTextOutput {
    /// The output of a code interpreter tool call that is text. 
    pub fn new(r#type: Type, logs: String) -> CodeInterpreterTextOutput {
        CodeInterpreterTextOutput {
            r#type,
            logs,
        }
    }
}
/// The type of the code interpreter text output. Always `logs`. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "logs")]
    Logs,
}

impl Default for Type {
    fn default() -> Type {
        Self::Logs
    }
}

