/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RealtimeTranscriptionSessionCreateRequestGa : Realtime transcription session object configuration.
#[derive(Clone, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct RealtimeTranscriptionSessionCreateRequestGa {
    /// The type of session to create. Always `transcription` for transcription sessions.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "audio", skip_serializing_if = "Option::is_none")]
    pub audio: Option<Box<models::RealtimeTranscriptionSessionCreateRequestGaAudio>>,
    /// Additional fields to include in server outputs.  `item.input_audio_transcription.logprobs`: Include logprobs for input audio transcription.
    #[serde(rename = "include", skip_serializing_if = "Option::is_none")]
    pub include: Option<Vec<Include>>,
}

impl RealtimeTranscriptionSessionCreateRequestGa {
    /// Realtime transcription session object configuration.
    pub fn new(r#type: Type) -> RealtimeTranscriptionSessionCreateRequestGa {
        RealtimeTranscriptionSessionCreateRequestGa {
            r#type,
            audio: None,
            include: None,
        }
    }
}
/// The type of session to create. Always `transcription` for transcription sessions.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "transcription")]
    Transcription,
}

impl Default for Type {
    fn default() -> Type {
        Self::Transcription
    }
}
/// Additional fields to include in server outputs.  `item.input_audio_transcription.logprobs`: Include logprobs for input audio transcription.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Include {
    #[serde(rename = "item.input_audio_transcription.logprobs")]
    ItemInputAudioTranscriptionLogprobs,
}

impl Default for Include {
    fn default() -> Include {
        Self::ItemInputAudioTranscriptionLogprobs
    }
}
