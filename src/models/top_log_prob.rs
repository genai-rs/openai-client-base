/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TopLogProb : The top log probability of a token.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct TopLogProb {
    #[serde(rename = "token")]
    pub token: String,
    #[serde(rename = "logprob")]
    pub logprob: f64,
    #[serde(rename = "bytes")]
    pub bytes: Vec<i32>,
}

impl TopLogProb {
    /// The top log probability of a token.
    pub fn new(token: String, logprob: f64, bytes: Vec<i32>) -> TopLogProb {
        TopLogProb {
            token,
            logprob,
            bytes,
        }
    }
}

impl std::fmt::Display for TopLogProb {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match serde_json::to_string(self) {
            Ok(s) => write!(f, "{}", s),
            Err(_) => Err(std::fmt::Error),
        }
    }
}
