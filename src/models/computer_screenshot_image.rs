/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ComputerScreenshotImage : A computer screenshot image used with the computer use tool.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ComputerScreenshotImage {
    /// Specifies the event type. For a computer screenshot, this property is  always set to `computer_screenshot`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The URL of the screenshot image.
    #[serde(rename = "image_url", skip_serializing_if = "Option::is_none")]
    pub image_url: Option<String>,
    /// The identifier of an uploaded file that contains the screenshot.
    #[serde(rename = "file_id", skip_serializing_if = "Option::is_none")]
    pub file_id: Option<String>,
}

impl ComputerScreenshotImage {
    /// A computer screenshot image used with the computer use tool.
    pub fn new(r#type: Type) -> ComputerScreenshotImage {
        ComputerScreenshotImage {
            r#type,
            image_url: None,
            file_id: None,
        }
    }
}
/// Specifies the event type. For a computer screenshot, this property is  always set to `computer_screenshot`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "computer_screenshot")]
    ComputerScreenshot,
}

impl Default for Type {
    fn default() -> Type {
        Self::ComputerScreenshot
    }
}
