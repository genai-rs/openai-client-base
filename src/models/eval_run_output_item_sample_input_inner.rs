/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// EvalRunOutputItemSampleInputInner : An input message.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct EvalRunOutputItemSampleInputInner {
    /// The role of the message sender (e.g., system, user, developer).
    #[serde(rename = "role")]
    pub role: String,
    /// The content of the message.
    #[serde(rename = "content")]
    pub content: String,
}

impl EvalRunOutputItemSampleInputInner {
    /// An input message.
    pub fn new(role: String, content: String) -> EvalRunOutputItemSampleInputInner {
        EvalRunOutputItemSampleInputInner {
            role,
            content,
        }
    }
}



impl std::fmt::Display for EvalRunOutputItemSampleInputInner {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match serde_json::to_string(self) {
            Ok(s) => write!(f, "{}", s),
            Err(_) => Err(std::fmt::Error),
        }
    }
}
