/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ChatCompletionRequestMessageContentPartAudioInputAudio {
    /// Base64 encoded audio data.
    #[serde(rename = "data")]
    pub data: String,
    /// The format of the encoded audio data. Currently supports \"wav\" and \"mp3\".
    #[serde(rename = "format")]
    pub format: Format,
}

impl ChatCompletionRequestMessageContentPartAudioInputAudio {
    pub fn new(
        data: String,
        format: Format,
    ) -> ChatCompletionRequestMessageContentPartAudioInputAudio {
        ChatCompletionRequestMessageContentPartAudioInputAudio { data, format }
    }
}
/// The format of the encoded audio data. Currently supports \"wav\" and \"mp3\".
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Format {
    #[serde(rename = "wav")]
    Wav,
    #[serde(rename = "mp3")]
    Mp3,
}

impl Default for Format {
    fn default() -> Format {
        Self::Wav
    }
}
