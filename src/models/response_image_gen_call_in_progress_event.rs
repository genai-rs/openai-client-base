/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ResponseImageGenCallInProgressEvent : Emitted when an image generation tool call is in progress.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ResponseImageGenCallInProgressEvent {
    /// The type of the event. Always 'response.image_generation_call.in_progress'.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The index of the output item in the response's output array.
    #[serde(rename = "output_index")]
    pub output_index: i32,
    /// The unique identifier of the image generation item being processed.
    #[serde(rename = "item_id")]
    pub item_id: String,
    /// The sequence number of the image generation item being processed.
    #[serde(rename = "sequence_number")]
    pub sequence_number: i32,
}

impl ResponseImageGenCallInProgressEvent {
    /// Emitted when an image generation tool call is in progress.
    pub fn new(
        r#type: Type,
        output_index: i32,
        item_id: String,
        sequence_number: i32,
    ) -> ResponseImageGenCallInProgressEvent {
        ResponseImageGenCallInProgressEvent {
            r#type,
            output_index,
            item_id,
            sequence_number,
        }
    }
}
/// The type of the event. Always 'response.image_generation_call.in_progress'.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "response.image_generation_call.in_progress")]
    ResponseImageGenerationCallInProgress,
}

impl Default for Type {
    fn default() -> Type {
        Self::ResponseImageGenerationCallInProgress
    }
}
