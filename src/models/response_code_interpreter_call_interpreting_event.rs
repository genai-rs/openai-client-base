/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ResponseCodeInterpreterCallInterpretingEvent : Emitted when the code interpreter is actively interpreting the code snippet.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ResponseCodeInterpreterCallInterpretingEvent {
    /// The type of the event. Always `response.code_interpreter_call.interpreting`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The index of the output item in the response for which the code interpreter is interpreting code.
    #[serde(rename = "output_index")]
    pub output_index: i32,
    /// The unique identifier of the code interpreter tool call item.
    #[serde(rename = "item_id")]
    pub item_id: String,
    /// The sequence number of this event, used to order streaming events.
    #[serde(rename = "sequence_number")]
    pub sequence_number: i32,
}

impl ResponseCodeInterpreterCallInterpretingEvent {
    /// Emitted when the code interpreter is actively interpreting the code snippet.
    pub fn new(
        r#type: Type,
        output_index: i32,
        item_id: String,
        sequence_number: i32,
    ) -> ResponseCodeInterpreterCallInterpretingEvent {
        ResponseCodeInterpreterCallInterpretingEvent {
            r#type,
            output_index,
            item_id,
            sequence_number,
        }
    }
}
/// The type of the event. Always `response.code_interpreter_call.interpreting`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "response.code_interpreter_call.interpreting")]
    ResponseCodeInterpreterCallInterpreting,
}

impl Default for Type {
    fn default() -> Type {
        Self::ResponseCodeInterpreterCallInterpreting
    }
}
