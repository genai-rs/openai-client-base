/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RealtimeSessionCreateResponseGaClientSecret : Ephemeral key returned by the API.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct RealtimeSessionCreateResponseGaClientSecret {
    /// Ephemeral key usable in client environments to authenticate connections to the Realtime API. Use this in client-side environments rather than a standard API token, which should only be used server-side. 
    #[serde(rename = "value")]
    pub value: String,
    /// Timestamp for when the token expires. Currently, all tokens expire after one minute. 
    #[serde(rename = "expires_at")]
    pub expires_at: i32,
}

impl RealtimeSessionCreateResponseGaClientSecret {
    /// Ephemeral key returned by the API.
    pub fn new(value: String, expires_at: i32) -> RealtimeSessionCreateResponseGaClientSecret {
        RealtimeSessionCreateResponseGaClientSecret {
            value,
            expires_at,
        }
    }
}

