/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct EvalRunPerTestingCriteriaResultsInner {
    /// A description of the testing criteria.
    #[serde(rename = "testing_criteria")]
    pub testing_criteria: String,
    /// Number of tests passed for this criteria.
    #[serde(rename = "passed")]
    pub passed: i32,
    /// Number of tests failed for this criteria.
    #[serde(rename = "failed")]
    pub failed: i32,
}

impl EvalRunPerTestingCriteriaResultsInner {
    pub fn new(testing_criteria: String, passed: i32, failed: i32) -> EvalRunPerTestingCriteriaResultsInner {
        EvalRunPerTestingCriteriaResultsInner {
            testing_criteria,
            passed,
            failed,
        }
    }
}



impl std::fmt::Display for EvalRunPerTestingCriteriaResultsInner {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match serde_json::to_string(self) {
            Ok(s) => write!(f, "{}", s),
            Err(_) => Err(std::fmt::Error),
        }
    }
}
