/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ComputerToolCallOutputResource {
    /// The type of the computer tool call output. Always `computer_call_output`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The unique ID of the computer call tool output.
    #[serde(rename = "id")]
    pub id: String,
    /// The ID of the computer tool call that produced the output.
    #[serde(rename = "call_id")]
    pub call_id: String,
    /// The safety checks reported by the API that have been acknowledged by the  developer.
    #[serde(
        rename = "acknowledged_safety_checks",
        skip_serializing_if = "Option::is_none"
    )]
    pub acknowledged_safety_checks: Option<Vec<models::ComputerToolCallSafetyCheck>>,
    #[serde(rename = "output")]
    pub output: Box<models::ComputerScreenshotImage>,
    /// The status of the message input. One of `in_progress`, `completed`, or `incomplete`. Populated when input items are returned via API.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
}

impl ComputerToolCallOutputResource {
    pub fn new(
        r#type: Type,
        id: String,
        call_id: String,
        output: models::ComputerScreenshotImage,
    ) -> ComputerToolCallOutputResource {
        ComputerToolCallOutputResource {
            r#type,
            id,
            call_id,
            acknowledged_safety_checks: None,
            output: Box::new(output),
            status: None,
        }
    }
}
/// The type of the computer tool call output. Always `computer_call_output`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "computer_call_output")]
    ComputerCallOutput,
}

impl Default for Type {
    fn default() -> Type {
        Self::ComputerCallOutput
    }
}
/// The status of the message input. One of `in_progress`, `completed`, or `incomplete`. Populated when input items are returned via API.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "in_progress")]
    InProgress,
    #[serde(rename = "completed")]
    Completed,
    #[serde(rename = "incomplete")]
    Incomplete,
}

impl Default for Status {
    fn default() -> Status {
        Self::InProgress
    }
}
