/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Certificate : Represents an individual `certificate` uploaded to the organization.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct Certificate {
    /// The object type.  - If creating, updating, or getting a specific certificate, the object type is `certificate`. - If listing, activating, or deactivating certificates for the organization, the object type is `organization.certificate`. - If listing, activating, or deactivating certificates for a project, the object type is `organization.project.certificate`.
    #[serde(rename = "object")]
    pub object: Object,
    /// The identifier, which can be referenced in API endpoints
    #[serde(rename = "id")]
    pub id: String,
    /// The name of the certificate.
    #[serde(rename = "name")]
    pub name: String,
    /// The Unix timestamp (in seconds) of when the certificate was uploaded.
    #[serde(rename = "created_at")]
    pub created_at: i32,
    #[serde(rename = "certificate_details")]
    pub certificate_details: Box<models::CertificateCertificateDetails>,
    /// Whether the certificate is currently active at the specified scope. Not returned when getting details for a specific certificate.
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
}

impl Certificate {
    /// Represents an individual `certificate` uploaded to the organization.
    pub fn new(
        object: Object,
        id: String,
        name: String,
        created_at: i32,
        certificate_details: models::CertificateCertificateDetails,
    ) -> Certificate {
        Certificate {
            object,
            id,
            name,
            created_at,
            certificate_details: Box::new(certificate_details),
            active: None,
        }
    }
}
/// The object type.  - If creating, updating, or getting a specific certificate, the object type is `certificate`. - If listing, activating, or deactivating certificates for the organization, the object type is `organization.certificate`. - If listing, activating, or deactivating certificates for a project, the object type is `organization.project.certificate`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "certificate")]
    Certificate,
    #[serde(rename = "organization.certificate")]
    OrganizationCertificate,
    #[serde(rename = "organization.project.certificate")]
    OrganizationProjectCertificate,
}

impl Default for Object {
    fn default() -> Object {
        Self::Certificate
    }
}
