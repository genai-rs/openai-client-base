/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WebhookResponseFailed : Sent when a background response has failed. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct WebhookResponseFailed {
    /// The Unix timestamp (in seconds) of when the model response failed. 
    #[serde(rename = "created_at")]
    pub created_at: i32,
    /// The unique ID of the event. 
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "data")]
    pub data: Box<models::WebhookResponseCancelledData>,
    /// The object of the event. Always `event`. 
    #[serde(rename = "object", skip_serializing_if = "Option::is_none")]
    pub object: Option<Object>,
    /// The type of the event. Always `response.failed`. 
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl WebhookResponseFailed {
    /// Sent when a background response has failed. 
    pub fn new(created_at: i32, id: String, data: models::WebhookResponseCancelledData, r#type: Type) -> WebhookResponseFailed {
        WebhookResponseFailed {
            created_at,
            id,
            data: Box::new(data),
            object: None,
            r#type,
        }
    }
}
/// The object of the event. Always `event`. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "event")]
    Event,
}

impl Default for Object {
    fn default() -> Object {
        Self::Event
    }
}
/// The type of the event. Always `response.failed`. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "response.failed")]
    ResponseFailed,
}

impl Default for Type {
    fn default() -> Type {
        Self::ResponseFailed
    }
}

