/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct InputMessagesItemReference {
    /// The type of input messages. Always `item_reference`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// A reference to a variable in the `item` namespace. Ie, \"item.name\"
    #[serde(rename = "item_reference")]
    pub item_reference: String,
}

impl InputMessagesItemReference {
    pub fn new(r#type: Type, item_reference: String) -> InputMessagesItemReference {
        InputMessagesItemReference {
            r#type,
            item_reference,
        }
    }
}
/// The type of input messages. Always `item_reference`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "item_reference")]
    ItemReference,
}

impl Default for Type {
    fn default() -> Type {
        Self::ItemReference
    }
}
