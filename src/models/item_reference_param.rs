/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ItemReferenceParam : An internal identifier for an item to reference.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ItemReferenceParam {
    /// The type of item to reference. Always `item_reference`.
    #[serde(
        rename = "type",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub r#type: Option<Option<Type>>,
    /// The ID of the item to reference.
    #[serde(rename = "id")]
    pub id: String,
}

impl ItemReferenceParam {
    /// An internal identifier for an item to reference.
    pub fn new(id: String) -> ItemReferenceParam {
        ItemReferenceParam { r#type: None, id }
    }
}
/// The type of item to reference. Always `item_reference`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "item_reference")]
    ItemReference,
}

impl Default for Type {
    fn default() -> Type {
        Self::ItemReference
    }
}
