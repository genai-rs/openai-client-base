/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WebSearchUserLocation : Approximate location parameters for the search.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct WebSearchUserLocation {
    /// The type of location approximation. Always `approximate`.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "approximate")]
    pub approximate: Box<models::WebSearchLocation>,
}

impl WebSearchUserLocation {
    /// Approximate location parameters for the search.
    pub fn new(r#type: Type, approximate: models::WebSearchLocation) -> WebSearchUserLocation {
        WebSearchUserLocation {
            r#type,
            approximate: Box::new(approximate),
        }
    }
}
/// The type of location approximation. Always `approximate`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "approximate")]
    Approximate,
}

impl Default for Type {
    fn default() -> Type {
        Self::Approximate
    }
}
