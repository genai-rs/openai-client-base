/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct ContainerFileCitationBody2 {
    /// The type of the container file citation. Always `container_file_citation`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The ID of the container file.
    #[serde(rename = "container_id")]
    pub container_id: String,
    /// The ID of the file.
    #[serde(rename = "file_id")]
    pub file_id: String,
    /// The index of the first character of the container file citation in the message.
    #[serde(rename = "start_index")]
    pub start_index: i32,
    /// The index of the last character of the container file citation in the message.
    #[serde(rename = "end_index")]
    pub end_index: i32,
    /// The filename of the container file cited.
    #[serde(rename = "filename")]
    pub filename: String,
}

impl ContainerFileCitationBody2 {
    pub fn new(r#type: Type, container_id: String, file_id: String, start_index: i32, end_index: i32, filename: String) -> ContainerFileCitationBody2 {
        ContainerFileCitationBody2 {
            r#type,
            container_id,
            file_id,
            start_index,
            end_index,
            filename,
        }
    }
}
/// The type of the container file citation. Always `container_file_citation`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "container_file_citation")]
    ContainerFileCitation,
}

impl Default for Type {
    fn default() -> Type {
        Self::ContainerFileCitation
    }
}

