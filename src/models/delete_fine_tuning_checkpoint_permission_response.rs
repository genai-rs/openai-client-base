/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct DeleteFineTuningCheckpointPermissionResponse {
    /// The ID of the fine-tuned model checkpoint permission that was deleted.
    #[serde(rename = "id")]
    pub id: String,
    /// The object type, which is always \"checkpoint.permission\".
    #[serde(rename = "object")]
    pub object: Object,
    /// Whether the fine-tuned model checkpoint permission was successfully deleted.
    #[serde(rename = "deleted")]
    pub deleted: bool,
}

impl DeleteFineTuningCheckpointPermissionResponse {
    pub fn new(id: String, object: Object, deleted: bool) -> DeleteFineTuningCheckpointPermissionResponse {
        DeleteFineTuningCheckpointPermissionResponse {
            id,
            object,
            deleted,
        }
    }
}
/// The object type, which is always \"checkpoint.permission\".
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "checkpoint.permission")]
    CheckpointPermission,
}

impl Default for Object {
    fn default() -> Object {
        Self::CheckpointPermission
    }
}

