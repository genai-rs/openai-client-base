/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// InputImage : An image input to the model.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct InputImage {
    /// The type of the image input. Always `input_image`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The URL of the image input.
    #[serde(rename = "image_url")]
    pub image_url: String,
    /// The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.
    #[serde(rename = "detail", skip_serializing_if = "Option::is_none")]
    pub detail: Option<String>,
}

impl InputImage {
    /// An image input to the model.
    pub fn new(r#type: Type, image_url: String) -> InputImage {
        InputImage {
            r#type,
            image_url,
            detail: None,
        }
    }
}
/// The type of the image input. Always `input_image`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "input_image")]
    InputImage,
}

impl Default for Type {
    fn default() -> Type {
        Self::InputImage
    }
}
