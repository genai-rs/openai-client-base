/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct EvalJsonlFileContentSource {
    /// The type of jsonl source. Always `file_content`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The content of the jsonl file.
    #[serde(rename = "content")]
    pub content: Vec<models::EvalJsonlFileContentSourceContentInner>,
}

impl EvalJsonlFileContentSource {
    pub fn new(r#type: Type, content: Vec<models::EvalJsonlFileContentSourceContentInner>) -> EvalJsonlFileContentSource {
        EvalJsonlFileContentSource {
            r#type,
            content,
        }
    }
}
/// The type of jsonl source. Always `file_content`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "file_content")]
    FileContent,
}

impl Default for Type {
    fn default() -> Type {
        Self::FileContent
    }
}

