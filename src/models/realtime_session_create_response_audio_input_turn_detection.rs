/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RealtimeSessionCreateResponseAudioInputTurnDetection : Configuration for turn detection.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct RealtimeSessionCreateResponseAudioInputTurnDetection {
    /// Type of turn detection, only `server_vad` is currently supported.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "threshold", skip_serializing_if = "Option::is_none")]
    pub threshold: Option<f64>,
    #[serde(rename = "prefix_padding_ms", skip_serializing_if = "Option::is_none")]
    pub prefix_padding_ms: Option<i32>,
    #[serde(
        rename = "silence_duration_ms",
        skip_serializing_if = "Option::is_none"
    )]
    pub silence_duration_ms: Option<i32>,
}

impl RealtimeSessionCreateResponseAudioInputTurnDetection {
    /// Configuration for turn detection.
    pub fn new() -> RealtimeSessionCreateResponseAudioInputTurnDetection {
        RealtimeSessionCreateResponseAudioInputTurnDetection {
            r#type: None,
            threshold: None,
            prefix_padding_ms: None,
            silence_duration_ms: None,
        }
    }
}

impl std::fmt::Display for RealtimeSessionCreateResponseAudioInputTurnDetection {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match serde_json::to_string(self) {
            Ok(s) => write!(f, "{}", s),
            Err(_) => Err(std::fmt::Error),
        }
    }
}
