/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct UpdateVectorStoreFileAttributesRequest {
    /// Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters, booleans, or numbers.
    #[serde(rename = "attributes", deserialize_with = "Option::deserialize")]
    pub attributes:
        Option<std::collections::HashMap<String, models::VectorStoreFileAttributesValue>>,
}

impl UpdateVectorStoreFileAttributesRequest {
    pub fn new(
        attributes: Option<
            std::collections::HashMap<String, models::VectorStoreFileAttributesValue>,
        >,
    ) -> UpdateVectorStoreFileAttributesRequest {
        UpdateVectorStoreFileAttributesRequest { attributes }
    }
}
