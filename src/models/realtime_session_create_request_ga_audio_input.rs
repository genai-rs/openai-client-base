/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct RealtimeSessionCreateRequestGaAudioInput {
    #[serde(rename = "format", skip_serializing_if = "Option::is_none")]
    pub format: Option<Box<models::RealtimeAudioFormats>>,
    #[serde(rename = "transcription", skip_serializing_if = "Option::is_none")]
    pub transcription: Option<Box<models::AudioTranscription>>,
    #[serde(rename = "noise_reduction", skip_serializing_if = "Option::is_none")]
    pub noise_reduction: Option<Box<models::RealtimeSessionInputAudioNoiseReduction>>,
    #[serde(rename = "turn_detection", skip_serializing_if = "Option::is_none")]
    pub turn_detection: Option<Box<models::RealtimeSessionCreateRequestGaAudioInputTurnDetection>>,
}

impl RealtimeSessionCreateRequestGaAudioInput {
    pub fn new() -> RealtimeSessionCreateRequestGaAudioInput {
        RealtimeSessionCreateRequestGaAudioInput {
            format: None,
            transcription: None,
            noise_reduction: None,
            turn_detection: None,
        }
    }
}

