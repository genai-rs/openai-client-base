/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RealtimeTruncation : Controls how the realtime conversation is truncated prior to model inference. The default is `auto`. 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, bon::Builder)]
pub struct RealtimeTruncation {
    /// Use retention ratio truncation.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// Fraction of post-instruction conversation tokens to retain (0.0 - 1.0) when the conversation exceeds the input token limit. 
    #[serde(rename = "retention_ratio")]
    pub retention_ratio: f64,
}

impl RealtimeTruncation {
    /// Controls how the realtime conversation is truncated prior to model inference. The default is `auto`. 
    pub fn new(r#type: Type, retention_ratio: f64) -> RealtimeTruncation {
        RealtimeTruncation {
            r#type,
            retention_ratio,
        }
    }
}
/// Use retention ratio truncation.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "retention_ratio")]
    RetentionRatio,
}

impl Default for Type {
    fn default() -> Type {
        Self::RetentionRatio
    }
}

